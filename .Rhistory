install.packages(c("dplyr", "lubridate", "swirl"))
library(lattice)
?lattice
data(Chem97, package = "mlmRev")
head(Chem97)
histogram(~, gcsescore, data = Chem97)
histogram(~ gcsescore, data = Chem97)
histogram(~ gcsescore | factor(score), data = Chem97)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
densityplot(~ gcsescore | factor(score), Chem97, groups = gender)
densityplot(~ gcsescore, Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
densityplot(~ gcsescore, Chem97, groups = gender)
densityplot(~ gcsescore, Chem97, groups = gender, auto.key = true)
densityplot(~ gcsescore, Chem97, groups = gender, auto.key = TRUE)
?panel.densityplot
densityplot(~ gcsescore, Chem97, groups = gender, auto.key = TRUE)
densityplot(~ gcsescore, Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
densityplot(~ gcsescore, Chem97, groups = gender,
plot.points = "jitter", auto.key = TRUE)
densityplot(~ gcsescore, Chem97, groups = gender,
plot.points = "rug", auto.key = TRUE)
?density
?shingle
densityplot(~ gcsescore, Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE)
?trellis.device
trellis.device
lattice.getOption("default.theme")
setwd("~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1")
dir()
## reade the data and parse the date
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
View(interpolated_total_steps)
View(total_steps)
hist_data <- transform(total_steps, int_total = (interoplated_total$total_steps))
hist_data <- transform(total_steps, int_total = (interoplated_total_steps$total_steps))
?mutate
hist_data <- mutate(total_steps, int_total = (interoplated_total_steps$total_steps))
?merge
hist_data <- merge(total_steps, interpolated_total_steps, by = "date")
View(hist_data)
hist_data <- merge(total_steps, interpolated_total_steps, by = "date")
?xyplot
total_steps <- mutate(total_steps, interpolated = FALSE)
View(total_steps)
interpolated_total_steps <- mutate(interpolated_total_steps, interpolated = TRUE)
hist_data <- colbind(total_steps, interpolated_total_steps)
?cbind
hist_data <- cbind(total_steps, interpolated_total_steps)
View(hist_data)
hist_data <- rbind(total_steps, interpolated_total_steps)
View(hist_data)
histogram(hist_data | interpolated)
?histogram
histogram( ~ hist_data$total_steps | hist_data$interpolated)
interpolated_total_steps <- mutate(interpolated_total_steps, int = "Interpolated")
total_steps <- mutate(total_steps, int = "No Interpolation")
hist_data <- rbind(interpolated_total_steps, total_steps)
View(hist_data)
histogram( ~ hist_data$total_steps | hist_data$int)
histogram( ~ hist_data$total_steps | hist_data$int, xlab = "Total Steps")
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
source('~/GitHub/RepResearchPeerAssess1/RepData_PeerAssessment1/Peer1.R')
